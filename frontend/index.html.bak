<!doctype html><meta charset="utf-8"><title>Noa Cobros – Autodetect</title>
<h1>Noa Cobros – Subir CSV (auto-detect endpoint)</h1>
<input type="file" id="f" accept=".csv"><button onclick="subir()">Subir</button>
<pre id="log" style="white-space:pre-wrap;background:#f7f7f7;padding:10px;border:1px solid #ddd"></pre>
<table id="t" border="1" cellpadding="6" cellspacing="0" style="margin-top:10px"><thead>
<tr><th>Cliente</th><th>Monto</th><th>Vence</th><th>Estado</th></tr></thead><tbody></tbody></table>
<script>
const API="https://noa-cobros-backend.onrender.com";
const CANDIDATOS=["/upload_file","/upload_file","/upload","/uploadcsv","/upload-csv","/api/upload_file","/api/upload"];
let UP=null;

async function autodetect(fd,log){
  for (const p of CANDIDATOS){
    try{
      log(`▶ Probando ${API+p}`);
      const r=await fetch(API+p,{method:"POST",body:fd});
      const ct=r.headers.get("content-type")||"";
      log(`   HTTP ${r.status} · CT: ${ct}`);
      if(r.ok && ct.includes("application/json")){
        const j=await r.clone().json().catch(()=>null);
        if(j && (Array.isArray(j.rows)||Array.isArray(j))){
          log(`✅ Éxito con ${API+p}`);
          return {url:API+p, data:j};
        }
      }
      const txt=await r.text();
      if (txt.startsWith("<!doctype")) log("   (Devolvió HTML, no JSON)");
    }catch(e){ log("   Error: "+e.message); }
  }
  return {url:null, data:null};
}

function logline(s){ document.getElementById("log").textContent += s+"\n"; }

async function subir(){
  const out=document.getElementById("log"); out.textContent="";
  const f=document.getElementById("f").files[0];
  if(!f){ out.textContent="Seleccioná un CSV"; return; }
  const fd=new FormData(); fd.append("file",f);

  if(!UP){
    const res=await autodetect(fd,logline);
    if(!res.url){ out.textContent+="\n❌ No encontré endpoint válido.\n"; return; }
    UP=res.url;
    if(res.data){ renderRows(res.data.rows||res.data); return; } // ya subió con éxito
  }else{
    logline(`Usando ${UP}`);
    const r=await fetch(UP,{method:"POST",body:fd});
    const j=await r.json();
    renderRows(j.rows||j);
  }
}

function renderRows(rows){
  const tb=document.querySelector("#t tbody");
  const norm=(rows||[]).map(r=>({
    Cliente:r.Cliente||r.cliente||"",
    Monto: +((r.Monto??r.monto) || 0),
    Vence: (r.Vence||r.vence||"").slice(0,10),
    Estado: r.Estado||r.estado||"Pendiente"
  }));
  tb.innerHTML = norm.map(r=>`<tr><td>${esc(r.Cliente)}</td><td>${fmt(r.Monto)}</td><td>${esc(r.Vence)}</td><td>${esc(r.Estado)}</td></tr>`).join("");
  logline(`\n✅ Filas: ${norm.length}`);
}
function fmt(n){ return Number(n||0).toLocaleString('es-CR',{style:'currency',currency:'CRC',maximumFractionDigits:0}); }
function esc(s){ return String(s??"").replace(/[&<>"']/g,m=>({ '&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m])); }
</script>
